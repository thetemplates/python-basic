name: Templates

on: [push]

jobs:
  build:
    name: Code Analysis
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pi
          if [ -f .devcontainer/requirements.txt ]; then pip install -r .devcontainer/requirements.txt; fi

      - name: Lint with flake8
        run: |
          printf "\n"
          echo "============================= flake8 session starts =============================="
          printf "\n"
          
          
          # stop the build if there are Python syntax errors or undefined names
          printf "\n"
          echo "Issues in relation to logic (F7), syntax (Python E9, Flake F7), mathematical
          formulae symbols (F63), undefined variable names (F82):"
          
          printf "\n src/algorithms "
          flake8 --count --select=E9,F63,F7,F82 --show-source --statistics src/algorithms
          
          printf "\n src/functions "
          flake8 --count --select=E9,F63,F7,F82 --show-source --statistics src/functions
          
          
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          printf "\n\n"
          echo "Complexity issues:"
          
          printf "\n src/algorithms "
          flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics src/algorithms
          
          printf "\n src/functions "
          flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics src/functions

      - name: Lint with pylint
        run: |
          printf "\n"
          echo "============================= pylint session starts =============================="

          printf "\n Package src/algorithms"
          pylint --rcfile .pylintrc src/algorithms
          
          printf "\n Package src/functions"
          pylint --rcfile .pylintrc src/functions

      - name: Test with pytest
        run: |
          printf "\n"
          echo "============================= pytest session starts =============================="
          
          printf "\n pytest tests/algorithms/test_random.py"
          pytest -o python_files=test_random.py

      - name: Coverage with pytest-cov
        run: |
          printf "\n "
          echo "============================= coverage session starts =============================="
          
          printf "\n Coverage tests/algorithms/"
          pytest --cov-report term-missing  --cov src/algorithms/ tests/algorithms/
  